name: Build & Deploy TCPPortScan
on:
  push:
      tags:
        - 'v*'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
            go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -v -o TCPPortScan-windows-amd64.exe
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -v -o TCPPortScan-windows-386.exe
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -o TCPPortScan-linux-amd64
          CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -v -o TCPPortScan-linux-386
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -v -o TCPPortScan-darwin-amd64

      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release
        id: upload-release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
            files: |
              TCPPortScan-windows-amd64.exe
              TCPPortScan-windows-386.exe
              TCPPortScan-linux-amd64
              TCPPortScan-linux-386
              TCPPortScan-darwin-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}